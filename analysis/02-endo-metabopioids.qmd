---
title: "Metabolic and opioid system expression analysis of Pubertal and Adult Hypothalamus with focus on PVN"
authors:
  - name: Evgenii O. Tretiakov, PhD
    affiliation: 
      - Department of Molecular Neurosciences, Center for Brain Research, Medical University of Vienna, Vienna A-1090, Austria
    roles: 
      - Conceptualization
      - Formal analysis
      - Data curation
      - Investigation
      - Methodology
      - Software
      - Visualization
      - Resources
      - Writing
    corresponding: true
    orcid: 0000-0001-5920-2190
    email: evgenii.tretiakov@meduniwien.ac.at
  - name: Tibor Harkany, PhD
    affiliation: 
      - Department of Molecular Neurosciences, Center for Brain Research, Medical University of Vienna, Vienna A-1090, Austria
      - Division of Molecular and Cellular Neuroendocrinology, Department of Neuroscience, Biomedicum 7D, Karolinska Institutet, Solna SE-17165, Sweden
    roles: 
      - Conceptualization
      - Funding acquisition
      - Resources
      - Supervision
      - Project administration
      - Writing
    corresponding: true
    orcid: 0000-0002-6637-5900
    email: tibor.harkany@meduniwien.ac.at
date: "`r Sys.Date()`"
format:
  html: 
    default: true
    toc: true
    df-print: paged
    code-fold: true
    fig-width: 9
    fig-height: 12
    fig-format: retina
    fig-responsive: true
    fig-dpi: 300
    embed-resources: true
  pdf: 
    default: true
    colorlinks: true
    fontsize: 12pt
execute:
  keep-md: true
  echo: true
  error: false
  message: false
  warning: false
  debug: false
knitr:
  opts_chunk:
    autodep: true
    fig.align: center
    fig.retina: 2
    fig.width: 14
    fig.height: 12
bibliography: references.bib
---

```{r}
#| label: setup
#| include: false
DOCNAME <- "metabolic-and-opioids-in-pvn-neurons"
NOW <- Sys.time()

# Time chunks during knitting
knitr::knit_hooks$set(timeit = function(before) {
  if (before) {
    print(paste("Start:", Sys.time()))
    NOW <<- Sys.time()
  } else {
    print(paste("Stop:", Sys.time()))
    print(Sys.time() - NOW)
  }
})

knitr::knit_hooks$set(debug = function(before, options, envir) {
  if (!before) {
    message(
      paste(names(envir), as.list(envir),
        sep = " = ", collapse = "\n"
      )
    )
  }
})

knitr::opts_chunk$set(
  cache          = FALSE,
  dev            = c("png", "pdf"),
  timeit         = TRUE
)

Sys.setenv(RETICULATE_PYTHON = "/opt/python/3.8.8/bin/python")
reticulate::use_condaenv("/opt/python/3.8.8/bin/python")
```

## Setup parameters

```{r}
#| label: libraries
#| cache: false
# Load tidyverse infrastructure packages
suppressPackageStartupMessages({
  library(future)
  library(here)
  library(tidyverse)
  library(magrittr)
  library(stringr)
  library(skimr)
  library(RColorBrewer)
  library(viridis)
})


# Load packages for scRNA-seq analysis and visualisation
suppressPackageStartupMessages({
  library(UpSetR)
  library(ggplot2)
  library(cowplot)
  library(patchwork)
  library(ggstatsplot)
  library(anndata)
  library(sceasy)
  library(Seurat)
  library(SeuratDisk)
  library(SeuratWrappers)
  library(scCustomize)
})

sc <- import("scanpy", convert = FALSE)
```

### Set paths

```{r}
#| label: paths
src_dir <- here("code")
data_dir <- here("data")
output_dir <- here("output")
plots_dir <- here(output_dir, "figures/")
tables_dir <- here(output_dir, "tables/")
```

### Load helper functions and gene-sets

```{r}
#| label: source
#| cache: false
source(here(src_dir, "genes.R"))
source(here(src_dir, "functions.R"))
```

### Set fixed variables

```{r}
#| label: params-computation
#| cache: false
# set seed
reseed <- 42
set.seed(seed = reseed)

# Parameters for parallel execution
n_cores <- 8
plan("multisession", workers = n_cores)
options(
  future.globals.maxSize = 100000 * 1024^2,
  future.rng.onMisuse = "ignore"
)
plan()


# ggplot2 theme
theme_set(ggmin::theme_powerpoint())
```

```{r}
#| label: params
bioproject <- "PRJNA547712"
project <- "kim2020_Hypoth-dev"
cb_fpr <- 0.001
low_cutoff_gene <- 500
high_cutoff_gene <- NULL
high_cutoff_gene <- 5000
low_cutoff_umis <- NULL
low_cutoff_umis <- -Inf
high_cutoff_umis <- 25000
high_cutoff_pc_mt <- 15
high_cutoff_pc_ribo <- 20
high_cutoff_pc_hb <- 0.1
high_cutoff_doublet_score <- 0.33
high_cutoff_complexity <- 0.85
connectivity_model <- "min_tree"
k <- 10
metric <- "euclidean"
signature <- 100
```

```{r}
#| label: opioid-system-genes
opioid_system_genes <- c(
  # Classical opioid receptors
  "Oprd1", # Delta opioid receptor
  "Oprk1", # Kappa opioid receptor
  "Oprl1", # Nociceptin/orphanin FQ receptor
  "Oprm1", # Mu opioid receptor

  # Processing enzymes
  "Pcsk1", # Proprotein convertase 1
  "Pcsk2", # Proprotein convertase 2

  # Endogenous opioid precursors
  "Pdyn", # Prodynorphin
  "Penk", # Proenkephalin
  # "Pomc",   # Proopiomelanocortin
  "Pnoc" # Prepronociceptin
)
```

```{r}
#| label: metabolic-signaling-genes
metabolic_signaling_genes <- c(
  # Receptor tyrosine kinases and ligands
  "Alk", # Anaplastic lymphoma kinase - neural development, metabolism
  "Fam150a", # ALK ligand 1/Augmentor-α - ALK receptor activator
  "Fam150b", # ALK ligand 2/Augmentor-β - ALK receptor activator

  # Melanocortin system
  "Mc3r", # Melanocortin 3 receptor - energy homeostasis, inflammation
  "Mc4r", # Melanocortin 4 receptor - appetite control, energy balance

  # Metabolic hormone receptors
  "Lepr", # Leptin receptor - energy balance, satiety
  "Insr", # Insulin receptor - glucose homeostasis
  # "Igf1r",    # Insulin-like growth factor 1 receptor - growth, development

  # Signaling adaptors/regulators
  "Lmo4", # LIM domain only 4 - transcriptional regulation, metabolism
  "Irs1", # Insulin receptor substrate 1 - insulin signaling
  "Irs4" # Insulin receptor substrate 4 - insulin/leptin signaling
)
```

## Load Kim DW et al., 2020[@kim2020]

```{r}
#| label: load-data
#| cache: false
anndata <- sc$read(here(
  "kim2020_combined.h5ad"
))
```

### Convert adata object to R AnnDataR6 object.

```{r}
#| label: convert-to-r
adata <- py_to_r(anndata)
class(adata)
class(adata$X)
adata
```

```{r}
#| label: convert-to-seurat
srt_path <- here(
  "data",
  sprintf("%s-whole_dataset-simple.h5Seurat", bioproject)
)

expr_mtx <- t(as.matrix(adata$X))
colnames(expr_mtx) <- rownames(adata$X)
rownames(expr_mtx) <- adata$var$features
srt <- CreateSeuratObject(
  expr_mtx,
  assay = "RNA",
  project = "kim2020_Hypoth_dev",
  meta.data = as.data.frame(adata$obs)
)

X_umap <- adata$obs |>
  select(X, Y) |>
  as.matrix()
colnames(X_umap) <- c("UMAP_1", "UMAP_2")
rownames(X_umap) <- colnames(expr_mtx)
srt[["umap"]] <- CreateDimReducObject(embeddings = X_umap, key = "umap_", assay = DefaultAssay(srt))

Idents(srt) <- "age"
srt <- Store_Palette_Seurat(seurat_object = srt, palette = rev(brewer.pal(n = 11, name = "Spectral")), palette_name = "expr_Colour_Pal")
```

## Load Romanov et al., 2020[@romanov2020]

```{r}
#| label: load-seurat
print(srt)
rar2020.srt.pub <- readRDS("/data/1_heteroAstrocytes/PRJNA548917/old/oldCCA_nae_srt.rds")
rar2020.srt.pub <- UpdateSeuratObject(rar2020.srt.pub)
Idents(rar2020.srt.pub) <-
  factor(rar2020.srt.pub$wtree,
    ordered = TRUE
  )

# Consistent colours and clusters names
colours_wtree <- setNames(read_lines(here(data_dir, "colours_wtree.tsv")), 1:45)

rar2020.srt.pub$age <-
  Cells(rar2020.srt.pub) |>
  str_split(pattern = ":", simplify = T) %>%
  .[, 1] %>%
  str_split_fixed(pattern = "_", n = 3) %>%
  .[, 3]
print(rar2020.srt.pub)
glimpse(rar2020.srt.pub@meta.data)
table(Idents(rar2020.srt.pub))

rar2020.srt.pub %<>% RenameIdents(object = ., `43` = "mneOXY")
rar2020.srt.pub %<>% RenameIdents(object = ., `26` = "mneVAS")
rar2020.srt.pub %<>% RenameIdents(object = ., `31` = "pneSS")
rar2020.srt.pub %<>% RenameIdents(object = ., `24` = "pneCRH")
rar2020.srt.pub %<>% RenameIdents(object = ., `15` = "pneTRH")
```

```{r}
#| label: n-cells-by-age-all
rar2020.srt.pub$stage <-
  rar2020.srt.pub$age %>%
  forcats::fct_collapse(
    Embryonic = c("E15", "E17"),
    Neonatal = c("P0", "P2", "3P2"),
    Pubertal = c("1P10", "P10"),
    Adult = c("P23")
  )
rar2020.srt.pub$stage %<>% factor(levels = c("Embryonic", "Neonatal", "Pubertal", "Adult"), ordered = TRUE)
rar2020.srt.pub$stage %>% forcats::fct_count()
```

```{r}
#| label: correct-age-labels
rar2020.srt.pub$age <-
  plyr::mapvalues(
    x = rar2020.srt.pub$age,
    from = c("E15", "E17", "P0", "P2", "3P2", "1P10", "P10", "P23"),
    to = c("E15", "E17", "P00", "P02", "P02", "P10", "P10", "P23")
  )



rar2020.srt.pub$age %>% forcats::fct_count()
```

```{r}
#| label: plot-feature-metabolic-romanov2020
#| fig-width: 18
#| fig-height: 36
FeaturePlot(
  rar2020.srt.pub,
  features = c(neurotrans, metabolic_signaling_genes, "Crh", "Trh", "Oxt"),
  label = F,
  blend = F,
  order = TRUE,
  pt.size = 1.2,
  raster.dpi = c(1024, 1024),
  alpha = 0.5,
  split.by = "age"
)
```

```{r}
#| label: e-metabolic-representation
sbs_mtx <-
  rar2020.srt.pub@assays$RNA@data %>%
  as.data.frame() %>%
  t()
rownames(sbs_mtx) <- colnames(rar2020.srt.pub)

# Filter features
filt_low_genes <-
  colSums(sbs_mtx) %>%
  .[. > quantile(., 0.4)] %>%
  names()
sbs_mtx %<>% .[, filt_low_genes]

min_filt_vector2 <-
  sbs_mtx %>%
  as_tibble() %>%
  select(all_of(filt_low_genes)) %>%
  summarise(across(.fns = ~ quantile(.x, .005))) %>%
  as.list() %>%
  map(as.double) %>%
  simplify() %>%
  .[filt_low_genes]

# Prepare table of intersection sets analysis
content_sbs_mtx <-
  (sbs_mtx > min_filt_vector2) %>%
  as_tibble() %>%
  mutate_all(as.numeric)
```

```{r}
#| label: upset-group-metabolic-all-romanov2020
#| fig-height: 24
#| fig-asp: 1.214
upset(
  as.data.frame(content_sbs_mtx),
  order.by = "freq",
  group.by = "sets",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 30,
  sets = c(metabolic_signaling_genes, "Crh", "Trh", "Oxt") %>%
    .[. %in% colnames(content_sbs_mtx)],
  empty.intersections = NULL
)
```

```{r}
#| label: upset-not-grouped-metabolic-all-romanov2020
#| fig-height: 24
#| fig-asp: 1.214
upset(
  as.data.frame(content_sbs_mtx),
  order.by = "freq",
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 15,
  sets = c(metabolic_signaling_genes, "Crh", "Trh", "Oxt") %>%
    .[. %in% colnames(content_sbs_mtx)],
  nintersects = 20,
  empty.intersections = NULL
)
```

```{r}
#| label: merge-metadata-and-expression
sbs_mtx_full <- content_sbs_mtx |>
  select(any_of(c(neurotrans, metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
  dplyr::bind_cols(rar2020.srt.pub@meta.data)

sbs_mtx_full |> glimpse()
```

## Prepare query mapping between datasets

```{r}
#| label: norm-scale-matrix
srt <- NormalizeData(srt)
srt <- FindVariableFeatures(srt, selection.method = "vst", nfeatures = 3000)
# all.genes <- rownames(srt)
# srt <- ScaleData(srt, features = all.genes)
srt <- ScaleData(srt)
```

```{r}
#| label: transfer-annotations
hypoth.anchors <- FindTransferAnchors(
  reference = rar2020.srt.pub, query = srt, dims = 1:30,
  reference.reduction = "pca"
)
predictions <- TransferData(anchorset = hypoth.anchors, refdata = rar2020.srt.pub$wtree, dims = 1:30)
srt <- AddMetaData(srt, metadata = predictions)
table(srt$predicted.id)
```

```{r}
#| label: transfer-umap
rar2020.srt.pub <- RunUMAP(rar2020.srt.pub, dims = 1:30, reduction = "pca", return.model = TRUE)
srt <- IntegrateEmbeddings(
  anchorset = hypoth.anchors, reference = rar2020.srt.pub, query = srt,
  new.reduction.name = "ref.pca"
)
srt <- ProjectUMAP(
  query = srt, query.reduction = "ref.pca", reference = rar2020.srt.pub,
  reference.reduction = "pca", reduction.model = "umap"
)
Idents(srt) <- srt$Cluster
```

```{r}
all.genes <- rownames(srt)
gene.scale <- c(
  cnbn,
  opioid_system_genes,
  metabolic_signaling_genes,
  np,
  npr,
  nmr,
  neurotrans
) |>
  unique() %>%
  .[. %in% all.genes]
```

```{r}
#| label: plot-reference-umap-transfered
p1 <- DimPlot(rar2020.srt.pub,
  reduction = "umap", group.by = "wtree", label = F
) + NoLegend() + ggtitle("Reference annotations")
p2 <- DimPlot(srt,
  reduction = "ref.umap", group.by = "Age", label = F
) + NoLegend() + ggtitle("Query transferred Embedding (more ages)")
p1 + p2
```

```{r}
#| label: plot-reference-umap-transfered-genes
#| fig-width: 18
#| fig-height: 6
p1 <- FeaturePlot_scCustom(
  rar2020.srt.pub,
  reduction = "umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  label = F,
  num_columns = 5,
  min.cutoff = "q05",
  na_cutoff = 2
) * NoLegend()
p2 <- FeaturePlot_scCustom(
  srt,
  reduction = "ref.umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  label = FALSE,
  num_columns = 5,
  min.cutoff = "q05",
  na_cutoff = 2
) * NoLegend()
(p1 / p2)
```

```{r}
#| label: plot-reference-umap-transfered-genes-Avp-Oxt
#| fig-width: 7.2
#| fig-height: 6
p1 <- FeaturePlot_scCustom(
  rar2020.srt.pub,
  reduction = "umap",
  features = c(
    "Oxt",
    "Avp"
  ),
  label = F,
  num_columns = 2,
  min.cutoff = "q05",
  na_cutoff = 5
) * NoLegend()
p2 <- FeaturePlot_scCustom(
  srt,
  reduction = "ref.umap",
  features = c(
    "Oxt",
    "Avp"
  ),
  label = FALSE,
  num_columns = 2,
  min.cutoff = "q05",
  na_cutoff = 5
) * NoLegend()
(p1 / p2)
```

```{r}
#| label: ref-embedding-split-stage-kim2020-np
#| fig-height: 21
#| fig-width: 18
srt$stage <-
  srt$Age %>%
  forcats::fct_collapse(
    Embryonic = c(
      "E10", "E11", "E12", "E13",
      "E14", "E15", "E16", "E18"
    ),
    Neonatal = c("P4", "P8"),
    Pubertal = c("P14"),
    Adult = c("P45")
  )
srt$stage %<>% factor(levels = c("Embryonic", "Neonatal", "Pubertal", "Adult"), ordered = TRUE)
FeaturePlot_scCustom(
  srt,
  reduction = "ref.umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  split.by = "stage",
  min.cutoff = "q05",
  na_cutoff = 2,
  label = F,
  num_columns = 4
) * NoLegend()
```

```{r}
#| label: ref-embedding-split-stage-romanov2020-np
#| fig-height: 21
#| fig-width: 18
FeaturePlot_scCustom(
  rar2020.srt.pub,
  reduction = "umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  split.by = "stage",
  min.cutoff = "q05",
  na_cutoff = 2,
  label = F,
  num_columns = 4
) * NoLegend()
```

```{r}
#| label: ref-embedding-selection-of-pvn-neurons
if (!file.exists(here(data_dir, "kim2020_pvn_neurons.txt"))) {
  plot <- DimPlot(object = srt, reduction = "ref.umap")
  srt <- CellSelector(plot = plot, object = srt, ident = "SelectedCells")

  selected_cells <- Cells(subset(srt, idents = "SelectedCells"))
  write_lines(selected_cells, file = here(data_dir, "kim2020_pvn_neurons.txt"))
}
selected_cells <- read_lines(here(data_dir, "kim2020_pvn_neurons.txt"))
srt <- subset(srt, cells = selected_cells)
srt <- subset(srt, subset = refUMAP_1 > 4 & refUMAP_2 > -1)

srt@meta.data <- srt@meta.data |> rename(wtree = predicted.id, age = Age)

srt <- subset(srt, subset = stage %in% c("Pubertal", "Adult"))

srt
```

We subset Kim et al., 2020 dataset to only Pubertal and Adult stages.

## Intersection sets analysis

### PVN Neurons from Kim et al. 2020, Nature Communications

```{r}
#| label: plot-kim2020-pvn-feature-np-split-by-stages
#| fig-height: 3
#| fig-width: 21
FeaturePlot_scCustom(
  srt,
  reduction = "ref.umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  na_cutoff = 2,
  label = F,
  num_columns = 5
) * NoLegend()
```

```{r}
#| label: plot-kim2020-pvn-feature-metabopioid-split-by-stages
#| fig-width: 18
#| fig-height: 21
FeaturePlot_scCustom(
  srt,
  reduction = "ref.umap",
  features = c(
    metabolic_signaling_genes,
    opioid_system_genes,
    "Slc17a6", "Gad1", "Gad2", "Crh", "Trh", "Oxt", "Sst"
  ),
  label = F,
  num_columns = 4
) * NoLegend()
```

```{r}
#| label: e-metabolic-representation-kim2020-pvn
sbs_mtx <-
  srt@assays$RNA@layers$data %>%
  as.data.frame() %>%
  t()

rownames(sbs_mtx) <- colnames(srt)
colnames(sbs_mtx) <- rownames(srt)

# Filter features
filt_low_genes <-
  colSums(sbs_mtx) %>%
  .[. > quantile(., 0.4)] %>%
  names()
sbs_mtx %<>% .[, filt_low_genes]

min_filt_vector2 <-
  sbs_mtx %>%
  as_tibble() %>%
  select(all_of(filt_low_genes)) %>%
  summarise(across(.fns = ~ quantile(.x, .005))) %>%
  as.list() %>%
  map(as.double) %>%
  simplify() %>%
  .[filt_low_genes]

# Prepare table of intersection sets analysis
content_sbs_mtx_kim <-
  (sbs_mtx > min_filt_vector2) %>%
  as_tibble() %>%
  mutate_all(as.numeric) %>%
  bind_cols(
    srt@meta.data |> select(wtree, age, stage)
  )
```

#### All

```{r}
#| label: upset-group-metabolic-kim2020-pvn
#| fig-height: 24
#| fig-asp: 1.214
upset(
  as.data.frame(
    content_sbs_mtx_kim |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 30,
  sets = colnames(data),
  empty.intersections = NULL
)
```

#### Pubertal

```{r}
#| label: upset-group-metabolic-kim2020-pvn-Pubertal
#| fig-height: 24
#| fig-asp: 1.214
upset(
  as.data.frame(
    content_sbs_mtx_kim |>
      filter(stage == "Pubertal") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 30,
  sets = colnames(data),
  empty.intersections = NULL
)
```

#### Adult

```{r}
#| label: upset-group-metabolic-kim2020-pvn-Adult
#| fig-height: 24
#| fig-asp: 1.214
upset(
  as.data.frame(
    content_sbs_mtx_kim |>
      filter(stage == "Adult") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 30,
  sets = colnames(data),
  empty.intersections = NULL
)
```

### PVN Neurons from Romanov et al. 2020, Nature

```{r}
#| label: subset-pvn
rar2020.srt.pvn <-
  subset(
    x = rar2020.srt.pub,
    idents = c(
      "mneOXY", "mneVAS",
      "pneSS", "pneCRH", "pneTRH"
    ),
    invert = FALSE
  )

rar2020.srt.pvn <- subset(rar2020.srt.pvn, subset = umap_1 > 4 & umap_2 > -1)

rar2020.srt.pvn$age <-
  plyr::mapvalues(
    x = rar2020.srt.pvn$age,
    from = c("E15", "E17", "P0", "P2", "3P2", "1P10", "P10", "P23"),
    to = c("E15", "E17", "P00", "P02", "P02", "P10", "P10", "P23")
  )

rar2020.srt.pvn <- subset(rar2020.srt.pvn, subset = stage %in% c("Pubertal", "Adult"))
```

We subset Romanov et al., 2020 dataset to only Pubertal and Adult
stages.

```{r}
#| label: plot-romanov2020-pvn-feature-np-split-by-stages
#| fig-width: 21
#| fig-height: 3
FeaturePlot_scCustom(
  rar2020.srt.pvn,
  reduction = "umap",
  features = c(
    "Oxt",
    "Avp",
    "Sst",
    "Crh",
    "Trh"
  ),
  na_cutoff = 2,
  label = F,
  num_columns = 5
) * NoLegend()
```

```{r}
#| label: plot-romanov2020-pvn-feature-metabopioid-split-by-stages
#| fig-width: 18
#| fig-height: 21
FeaturePlot_scCustom(
  rar2020.srt.pvn,
  reduction = "umap",
  features = c(
    metabolic_signaling_genes,
    opioid_system_genes,
    "Slc17a6", "Gad1", "Gad2", "Crh", "Trh", "Oxt", "Sst"
  ),
  label = F,
  num_columns = 4
) * NoLegend()
```

```{r}
#| label: e-metabolic-representation-romanov2020-pvn
sbs_mtx <-
  rar2020.srt.pvn@assays$RNA@data %>%
  as.data.frame() %>%
  t()

# Filter features
filt_low_genes <-
  colSums(sbs_mtx) %>%
  .[. > quantile(., 0.4)] %>%
  names()
sbs_mtx %<>% .[, filt_low_genes]

min_filt_vector2 <-
  sbs_mtx %>%
  as_tibble() %>%
  select(all_of(filt_low_genes)) %>%
  summarise(across(.fns = ~ quantile(.x, .005))) %>%
  as.list() %>%
  map(as.double) %>%
  simplify() %>%
  .[filt_low_genes]

# Prepare table of intersection sets analysis
content_sbs_mtx_romanov <-
  (sbs_mtx > min_filt_vector2) %>%
  as_tibble() %>%
  mutate_all(as.numeric) %>%
  bind_cols(
    rar2020.srt.pvn@meta.data |> select(wtree, age, stage)
  )
```

#### All

```{r}
#| label: upset-group-metabolic-romanov2020-pvn
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx_romanov |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)
```

#### Pubertal

```{r}
#| label: upset-group-metabolic-romanov2020-pvn-Pubertal
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx_romanov |>
      filter(stage == "Pubertal") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)
```

#### Adult

```{r}
#| label: upset-group-metabolic-romanov2020-pvn-Adult
#| fig-height: 18
#| fig-width: 24
upset(
  as.data.frame(
    content_sbs_mtx_romanov |>
      filter(stage == "Adult") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)
```

### PVN Neurons from both datasets joined

```{r}
#| label: e-metabolic-representation-pvn
# Prepare table of intersection sets analysis
to_select <-
  c(gene.scale, "wtree", "age", "stage") %>%
  .[. %in% colnames(content_sbs_mtx_kim)] %>%
  .[. %in% colnames(content_sbs_mtx_romanov)]

content_sbs_mtx <-
  bind_rows(
    content_sbs_mtx_kim |> select(all_of(to_select)),
    content_sbs_mtx_romanov |> select(all_of(to_select))
  )
```

#### All

```{r}
#| label: upset-group-metabolic-pvn
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)
```

#### Pubertal

```{r}
#| label: upset-group-metabolic-pvn-Pubertal-f2
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Pubertal") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Pubertal") |>
    select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt")))
))
```

```{r}
#| label: upset-group-e-opioid-pvn-Pubertal-f3
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Pubertal") |>
      select(any_of(c(
        opioid_system_genes, "Crh", "Trh", "Oxt"
      ))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Pubertal") |>
    select(any_of(c(
      opioid_system_genes, "Crh", "Trh", "Oxt"
    ))) |>
    select(where(~ is.numeric(.x) && sum(.x) > 0))
))
```

```{r}
#| label: upset-group-e-metabopioid-pvn-Pubertal-f4
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Pubertal") |>
      select(any_of(c(
        metabolic_signaling_genes,
        opioid_system_genes, "Crh", "Trh", "Oxt"
      ))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Pubertal") |>
    select(any_of(c(
      metabolic_signaling_genes,
      opioid_system_genes, "Crh", "Trh", "Oxt"
    ))) |>
    select(where(~ is.numeric(.x) && sum(.x) > 0))
))
```

#### Adult

```{r}
#| label: upset-group-metabolic-pvn-Adult-f2
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Adult") |>
      select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Adult") |>
    select(any_of(c(metabolic_signaling_genes, "Crh", "Trh", "Oxt"))) |>
    select(where(~ is.numeric(.x) && sum(.x) > 0))
))
```

```{r}
#| label: upset-group-e-opioid-pvn-Adult-f3
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Adult") |>
      select(any_of(c(opioid_system_genes, "Crh", "Trh", "Oxt"))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 70,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Adult") |>
    select(any_of(c(opioid_system_genes, "Crh", "Trh", "Oxt"))) |>
    select(where(~ is.numeric(.x) && sum(.x) > 0))
))
```

```{r}
#| label: upset-group-e-metabopioid-pvn-Adult-f4
#| fig-height: 24
#| fig-width: 36
upset(
  as.data.frame(
    content_sbs_mtx |>
      filter(stage == "Adult") |>
      select(any_of(c(
        metabolic_signaling_genes,
        opioid_system_genes, "Crh", "Trh", "Oxt"
      ))) |>
      select(where(~ is.numeric(.x) && sum(.x) > 0))
  ),
  order.by = "freq",
  cutoff = 3,
  sets.x.label = "Number of cells",
  number.angles = 0,
  point.size = 3.5, line.size = 2,
  text.scale = c(2, 1.6, 2, 1.3, 2, 1.1),
  nsets = 30,
  nintersects = 30,
  sets = colnames(data),
  empty.intersections = NULL
)

skim(as.data.frame(
  content_sbs_mtx |>
    filter(stage == "Adult") |>
    select(any_of(c(
      metabolic_signaling_genes,
      opioid_system_genes, "Crh", "Trh", "Oxt"
    ))) |>
    select(where(~ is.numeric(.x) && sum(.x) > 0))
))
```

```{r}
#| label: session-info
sessioninfo::session_info()
```
